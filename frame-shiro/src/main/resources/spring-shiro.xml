<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns="http://www.springframework.org/schema/beans"-->
       <!--xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"-->
       <!--xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">-->

    <!--&lt;!&ndash; 继承自AuthorizingRealm的自定义Realm,即指定Shiro验证用户登录的类为自定义的MyRealm.java &ndash;&gt;-->
    <!--<bean id="myRealm" class="com.hxy.shiro.realm.MyRealm"/>-->

    <!--&lt;!&ndash; Spring提供的基于的Ehcache实现的缓存管理器 &ndash;&gt;-->
    <!--<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">-->
        <!--<property name="configLocation" value="classpath:ehcache.xml"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash;缓存机制 &ndash;&gt;-->
    <!--<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">-->
        <!--<property name="cacheManager" ref="cacheManager" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session &ndash;&gt;-->
    <!--&lt;!&ndash; 即<property name="sessionMode" value="native"/>,详细说明见官方文档 &ndash;&gt;-->
    <!--&lt;!&ndash; 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 &ndash;&gt;-->
    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
        <!--&lt;!&ndash; 注入会话管理器    进行交互&ndash;&gt;-->
        <!--<property name="sessionManager" ref="sessionManager"></property>-->
        <!--<property name="rememberMeManager" ref="rememberMeManager"/>-->
        <!--<property name="cacheManager" ref="shiroCacheManager"/>-->
        <!--<property name="realm" ref="myRealm"/>-->
    <!--</bean>-->


    <!--&lt;!&ndash;rememberMeCookie 即记住我的Cookie，保存时长30 天&ndash;&gt;-->
    <!--<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
        <!--<constructor-arg value="rememberMe"/>-->
        <!--<property name="httpOnly" value="true"/>-->
        <!--<property name="maxAge" value="2592000"/>&lt;!&ndash; 30天&ndash;&gt;-->
        <!--&lt;!&ndash; 配置存储rememberMe Cookie的domain为 一级域名	这里如果配置需要和Session回话一致更好。-->
        <!--<property name="domain" value=".sojson.com"/>-->
         <!--&ndash;&gt;-->
    <!--</bean>-->
    <!--&lt;!&ndash; rememberMe管理器,cipherKey是加密rememberMe Cookie的密钥；默认AES算法；&ndash;&gt;-->
    <!--<bean id="rememberMeManager"-->
          <!--class="org.apache.shiro.web.mgt.CookieRememberMeManager">-->
        <!--<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>-->
        <!--<property name="cookie" ref="rememberMeCookie"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 会话Cookie 模板 sessionIdCookie是用于生产Session ID Cookie 的模板；&ndash;&gt;-->
    <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
        <!--&lt;!&ndash;cookie的name &ndash;&gt;-->
        <!--<constructor-arg value="sid"/>-->
        <!--<property name="httpOnly" value="true"/>-->
        <!--&lt;!&ndash;maxAge=-1 表示浏览器关闭时失效此Cookie&ndash;&gt;-->
        <!--<property name="maxAge" value="-1"/>-->
        <!--&lt;!&ndash; 配置存储Session Cookie的domain为 一级域名-->
        <!--<property name="domain" value=".sojson.com"/>-->
        <!--&ndash;&gt;-->
    <!--</bean>-->

    <!--&lt;!&ndash; 会话ID生成器 &ndash;&gt;-->
    <!--<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>-->

    <!--&lt;!&ndash; 会话DAO &ndash;&gt;-->
    <!--<bean id="sessionDAO"-->
          <!--class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
        <!--<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>-->
        <!--<property name="sessionIdGenerator" ref="sessionIdGenerator"/>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 会话验证调度器 &ndash;&gt;-->
    <!--&lt;!&ndash; <bean id="sessionValidationScheduler" class="com.hxy.shiro.quartzSession.QuartzSessionValidationScheduler">-->
         <!--<property name="sessionValidationInterval" value="1800000"/>-->
         <!--<property name="sessionManager" ref="sessionManager"/>-->
     <!--</bean>&ndash;&gt;-->

    <!--&lt;!&ndash; 会话管理器使用用于web 环境的DefaultWebSessionManager &ndash;&gt;-->
    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
        <!--&lt;!&ndash; 设置全局会话超时时间，默认30分钟(1800000) &ndash;&gt;-->
        <!--<property name="globalSessionTimeout" value="1800000"/>-->
        <!--<property name="deleteInvalidSessions" value="true"/>-->
        <!--<property name="sessionValidationSchedulerEnabled" value="true"/>-->
        <!--&lt;!&ndash;<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>&ndash;&gt;-->
        <!--<property name="sessionDAO" ref="sessionDAO"/>-->
        <!--<property name="sessionIdCookieEnabled" value="true"/>-->
        <!--<property name="sessionIdCookie" ref="sessionIdCookie"/>-->
    <!--</bean>-->

    <!--<bean id="rememberAuthFilter" class="com.hxy.shiro.filter.RememberAuthenticationFilter"/>-->

    <!--&lt;!&ndash; Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 &ndash;&gt;-->
    <!--&lt;!&ndash; Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 &ndash;&gt;-->
    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
        <!--&lt;!&ndash; Shiro的核心安全接口,这个属性是必须的 &ndash;&gt;-->
        <!--<property name="securityManager" ref="securityManager"/>-->
        <!--&lt;!&ndash; 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.html"页面 &ndash;&gt;-->
        <!--<property name="loginUrl" value="/login.html"/>-->
        <!--&lt;!&ndash; 登录成功后要跳转的连接 &ndash;&gt;-->
        <!--<property name="successUrl" value="/index1.html"/>-->
        <!--&lt;!&ndash; 用户访问未对其授权的资源时,所显示的连接 &ndash;&gt;-->
        <!--&lt;!&ndash; 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用[玄玉]登录后访问/admin/listUser.jsp就看见浏览器会显示unauthor.jsp &ndash;&gt;-->
        <!--<property name="unauthorizedUrl" value="/"/>-->
        <!--&lt;!&ndash; Shiro连接约束配置,即过滤链的定义 &ndash;&gt;-->
        <!--&lt;!&ndash; 此处可配合我的这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 &ndash;&gt;-->
        <!--&lt;!&ndash; 下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 &ndash;&gt;-->
        <!--&lt;!&ndash; anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 &ndash;&gt;-->
        <!--&lt;!&ndash; authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter &ndash;&gt;-->
        <!--<property name="filters">-->
            <!--<util:map>-->
                <!--<entry key="rememberAuthFilter" value-ref="rememberAuthFilter" />-->
            <!--</util:map>-->
        <!--</property>-->
        <!--<property name="filterChainDefinitions">-->
            <!--<value>-->
                <!--/service/**=anon-->
                <!--/statics/**=anon-->
                <!--/js/**=anon-->
                <!--/login.html=anon-->
                <!--/login/login=anon-->
                <!--/login/captcha=anon-->
                <!--/**=rememberAuthFilter-->
            <!--</value>-->
        <!--</property>-->
    <!--</bean>-->


    <!--&lt;!&ndash; 保证实现了Shiro内部lifecycle函数的bean执行 &ndash;&gt;-->
    <!--<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

    <!--&lt;!&ndash; AOP式方法级权限检查  注：使用shiro注解就需要用AOP&ndash;&gt;-->
    <!--<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">-->
        <!--&lt;!&ndash;使用代理类&ndash;&gt;-->
        <!--<property name="proxyTargetClass" value="true" />-->
    <!--</bean>-->
    <!--&lt;!&ndash;<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">&ndash;&gt;-->
    <!--&lt;!&ndash;<property name="securityManager" ref="securityManager"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

<!--</beans>-->